Object Model:

We need to be able to track the hits to each individual page within a site. The object model therefore looks like this:

    ----------------
    |     Site     |
    ----------------
    /       |       \ 
 ------   ------   ------
 |Page|	  |Page|   |Page|
 ------   ------   ------

 -------------------------
 |  Site                 |
 |			 |
 | int hits		 |
 | int total_duration	 |
 | int id		 |
 -------------------------

 -------------------------
 |  Page 		 |
 |			 |
 | int site_id		 |
 | int hits		 |
 | int total_duration	 |
 | int id	         |
 -------------------------


Each Site has many Page objects that belong to it. This relationship goes as such: a Site has many Pages, and a Page belongs to one Site. This model allows us to record the hits to each individual page within a site and keep a counter for each of them, and also allows us to keep track of the aggregate number of hits to a Site. For a web analytics tool, both pieces of information are valuable (we get to see where users like to visit). If we also keep track of the amount of time spent on each Page, that allows the total amount of time spent on a Site to be calculated, and we can see which pages that users spend the most time.

Hits are not modeled as objects because the granularity of individual visits is not necessary at this point. We are looking for *aggregated* information, meaning that we do not need to know the number of visits from each IP address or the average duration of visits originating in North America (this could be an extension in later versions). Since the hits are not modeled as objects, processing a hit requires only updating the necessary tables dynamically. 

This model also allows new Pages to be added to each Site easily. If the controller registers a Page hit to a location that is not already in the Pages table, the Site to which the new Page object belongs can be interpreted from the Page address. 

When the summary information for each Site is requested, the average visit duration, number of hits, number of tracked Pages, etc, can be calculated "on the fly". This has an upfront cost of requesting the analytics information for a Site, but saves computation time on the server when each Page is viewed. Since the number of Page views *should* (assuming a normal web traffic pattern) be much higher than the number of requests for analytic information, we would like to optimize for fast registering of Page views and push the computation time to the summary information requests; this is an acceptable trade-off.



Event Model:

In order to keep track of the amount of time spent on each page during a visit, we need to be able to keep track of when users Enter and Exit each page.
